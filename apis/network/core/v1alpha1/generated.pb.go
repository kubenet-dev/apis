/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/kubenet-dev/apis/apis/network/core/v1alpha1/generated.proto

package v1alpha1

import (
	fmt "fmt"

	io "io"

	proto "github.com/gogo/protobuf/proto"
	v1alpha1 "github.com/kuidio/kuid/apis/backend/ipam/v1alpha1"

	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func (m *BFDLinkParameters) Reset()      { *m = BFDLinkParameters{} }
func (*BFDLinkParameters) ProtoMessage() {}
func (*BFDLinkParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{0}
}
func (m *BFDLinkParameters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BFDLinkParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *BFDLinkParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BFDLinkParameters.Merge(m, src)
}
func (m *BFDLinkParameters) XXX_Size() int {
	return m.Size()
}
func (m *BFDLinkParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_BFDLinkParameters.DiscardUnknown(m)
}

var xxx_messageInfo_BFDLinkParameters proto.InternalMessageInfo

func (m *BGPLinkParameters) Reset()      { *m = BGPLinkParameters{} }
func (*BGPLinkParameters) ProtoMessage() {}
func (*BGPLinkParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{1}
}
func (m *BGPLinkParameters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BGPLinkParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *BGPLinkParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BGPLinkParameters.Merge(m, src)
}
func (m *BGPLinkParameters) XXX_Size() int {
	return m.Size()
}
func (m *BGPLinkParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_BGPLinkParameters.DiscardUnknown(m)
}

var xxx_messageInfo_BGPLinkParameters proto.InternalMessageInfo

func (m *IGPLinkParameters) Reset()      { *m = IGPLinkParameters{} }
func (*IGPLinkParameters) ProtoMessage() {}
func (*IGPLinkParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{2}
}
func (m *IGPLinkParameters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IGPLinkParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *IGPLinkParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IGPLinkParameters.Merge(m, src)
}
func (m *IGPLinkParameters) XXX_Size() int {
	return m.Size()
}
func (m *IGPLinkParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_IGPLinkParameters.DiscardUnknown(m)
}

var xxx_messageInfo_IGPLinkParameters proto.InternalMessageInfo

func (m *ISISLinkParameters) Reset()      { *m = ISISLinkParameters{} }
func (*ISISLinkParameters) ProtoMessage() {}
func (*ISISLinkParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{3}
}
func (m *ISISLinkParameters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ISISLinkParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ISISLinkParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ISISLinkParameters.Merge(m, src)
}
func (m *ISISLinkParameters) XXX_Size() int {
	return m.Size()
}
func (m *ISISLinkParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_ISISLinkParameters.DiscardUnknown(m)
}

var xxx_messageInfo_ISISLinkParameters proto.InternalMessageInfo

func (m *NetworkDesign) Reset()      { *m = NetworkDesign{} }
func (*NetworkDesign) ProtoMessage() {}
func (*NetworkDesign) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{4}
}
func (m *NetworkDesign) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesign.Merge(m, src)
}
func (m *NetworkDesign) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesign) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesign.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesign proto.InternalMessageInfo

func (m *NetworkDesignEncapsulation) Reset()      { *m = NetworkDesignEncapsulation{} }
func (*NetworkDesignEncapsulation) ProtoMessage() {}
func (*NetworkDesignEncapsulation) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{5}
}
func (m *NetworkDesignEncapsulation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignEncapsulation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignEncapsulation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignEncapsulation.Merge(m, src)
}
func (m *NetworkDesignEncapsulation) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignEncapsulation) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignEncapsulation.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignEncapsulation proto.InternalMessageInfo

func (m *NetworkDesignEncapsulationMPLS) Reset()      { *m = NetworkDesignEncapsulationMPLS{} }
func (*NetworkDesignEncapsulationMPLS) ProtoMessage() {}
func (*NetworkDesignEncapsulationMPLS) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{6}
}
func (m *NetworkDesignEncapsulationMPLS) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignEncapsulationMPLS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignEncapsulationMPLS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignEncapsulationMPLS.Merge(m, src)
}
func (m *NetworkDesignEncapsulationMPLS) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignEncapsulationMPLS) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignEncapsulationMPLS.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignEncapsulationMPLS proto.InternalMessageInfo

func (m *NetworkDesignEncapsulationMPLSLDP) Reset()      { *m = NetworkDesignEncapsulationMPLSLDP{} }
func (*NetworkDesignEncapsulationMPLSLDP) ProtoMessage() {}
func (*NetworkDesignEncapsulationMPLSLDP) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{7}
}
func (m *NetworkDesignEncapsulationMPLSLDP) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignEncapsulationMPLSLDP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignEncapsulationMPLSLDP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignEncapsulationMPLSLDP.Merge(m, src)
}
func (m *NetworkDesignEncapsulationMPLSLDP) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignEncapsulationMPLSLDP) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignEncapsulationMPLSLDP.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignEncapsulationMPLSLDP proto.InternalMessageInfo

func (m *NetworkDesignEncapsulationMPLSRSVP) Reset()      { *m = NetworkDesignEncapsulationMPLSRSVP{} }
func (*NetworkDesignEncapsulationMPLSRSVP) ProtoMessage() {}
func (*NetworkDesignEncapsulationMPLSRSVP) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{8}
}
func (m *NetworkDesignEncapsulationMPLSRSVP) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignEncapsulationMPLSRSVP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignEncapsulationMPLSRSVP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignEncapsulationMPLSRSVP.Merge(m, src)
}
func (m *NetworkDesignEncapsulationMPLSRSVP) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignEncapsulationMPLSRSVP) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignEncapsulationMPLSRSVP.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignEncapsulationMPLSRSVP proto.InternalMessageInfo

func (m *NetworkDesignEncapsulationMPLSSR) Reset()      { *m = NetworkDesignEncapsulationMPLSSR{} }
func (*NetworkDesignEncapsulationMPLSSR) ProtoMessage() {}
func (*NetworkDesignEncapsulationMPLSSR) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{9}
}
func (m *NetworkDesignEncapsulationMPLSSR) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignEncapsulationMPLSSR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignEncapsulationMPLSSR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignEncapsulationMPLSSR.Merge(m, src)
}
func (m *NetworkDesignEncapsulationMPLSSR) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignEncapsulationMPLSSR) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignEncapsulationMPLSSR.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignEncapsulationMPLSSR proto.InternalMessageInfo

func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) Reset() {
	*m = NetworkDesignEncapsulationMPLSSRv6MicroSID{}
}
func (*NetworkDesignEncapsulationMPLSSRv6MicroSID) ProtoMessage() {}
func (*NetworkDesignEncapsulationMPLSSRv6MicroSID) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{10}
}
func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignEncapsulationMPLSSRv6MicroSID.Merge(m, src)
}
func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignEncapsulationMPLSSRv6MicroSID.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignEncapsulationMPLSSRv6MicroSID proto.InternalMessageInfo

func (m *NetworkDesignEncapsulationSRv6) Reset()      { *m = NetworkDesignEncapsulationSRv6{} }
func (*NetworkDesignEncapsulationSRv6) ProtoMessage() {}
func (*NetworkDesignEncapsulationSRv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{11}
}
func (m *NetworkDesignEncapsulationSRv6) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignEncapsulationSRv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignEncapsulationSRv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignEncapsulationSRv6.Merge(m, src)
}
func (m *NetworkDesignEncapsulationSRv6) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignEncapsulationSRv6) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignEncapsulationSRv6.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignEncapsulationSRv6 proto.InternalMessageInfo

func (m *NetworkDesignEncapsulationVXLAN) Reset()      { *m = NetworkDesignEncapsulationVXLAN{} }
func (*NetworkDesignEncapsulationVXLAN) ProtoMessage() {}
func (*NetworkDesignEncapsulationVXLAN) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{12}
}
func (m *NetworkDesignEncapsulationVXLAN) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignEncapsulationVXLAN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignEncapsulationVXLAN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignEncapsulationVXLAN.Merge(m, src)
}
func (m *NetworkDesignEncapsulationVXLAN) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignEncapsulationVXLAN) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignEncapsulationVXLAN.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignEncapsulationVXLAN proto.InternalMessageInfo

func (m *NetworkDesignInterfaceParameters) Reset()      { *m = NetworkDesignInterfaceParameters{} }
func (*NetworkDesignInterfaceParameters) ProtoMessage() {}
func (*NetworkDesignInterfaceParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{13}
}
func (m *NetworkDesignInterfaceParameters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignInterfaceParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignInterfaceParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignInterfaceParameters.Merge(m, src)
}
func (m *NetworkDesignInterfaceParameters) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignInterfaceParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignInterfaceParameters.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignInterfaceParameters proto.InternalMessageInfo

func (m *NetworkDesignInterfaces) Reset()      { *m = NetworkDesignInterfaces{} }
func (*NetworkDesignInterfaces) ProtoMessage() {}
func (*NetworkDesignInterfaces) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{14}
}
func (m *NetworkDesignInterfaces) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignInterfaces) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignInterfaces) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignInterfaces.Merge(m, src)
}
func (m *NetworkDesignInterfaces) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignInterfaces) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignInterfaces.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignInterfaces proto.InternalMessageInfo

func (m *NetworkDesignInterfacesLoopback) Reset()      { *m = NetworkDesignInterfacesLoopback{} }
func (*NetworkDesignInterfacesLoopback) ProtoMessage() {}
func (*NetworkDesignInterfacesLoopback) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{15}
}
func (m *NetworkDesignInterfacesLoopback) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignInterfacesLoopback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignInterfacesLoopback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignInterfacesLoopback.Merge(m, src)
}
func (m *NetworkDesignInterfacesLoopback) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignInterfacesLoopback) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignInterfacesLoopback.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignInterfacesLoopback proto.InternalMessageInfo

func (m *NetworkDesignInterfacesUnderlay) Reset()      { *m = NetworkDesignInterfacesUnderlay{} }
func (*NetworkDesignInterfacesUnderlay) ProtoMessage() {}
func (*NetworkDesignInterfacesUnderlay) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{16}
}
func (m *NetworkDesignInterfacesUnderlay) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignInterfacesUnderlay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignInterfacesUnderlay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignInterfacesUnderlay.Merge(m, src)
}
func (m *NetworkDesignInterfacesUnderlay) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignInterfacesUnderlay) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignInterfacesUnderlay.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignInterfacesUnderlay proto.InternalMessageInfo

func (m *NetworkDesignList) Reset()      { *m = NetworkDesignList{} }
func (*NetworkDesignList) ProtoMessage() {}
func (*NetworkDesignList) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{17}
}
func (m *NetworkDesignList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignList.Merge(m, src)
}
func (m *NetworkDesignList) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignList) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignList.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignList proto.InternalMessageInfo

func (m *NetworkDesignProtocols) Reset()      { *m = NetworkDesignProtocols{} }
func (*NetworkDesignProtocols) ProtoMessage() {}
func (*NetworkDesignProtocols) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{18}
}
func (m *NetworkDesignProtocols) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocols) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocols) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocols.Merge(m, src)
}
func (m *NetworkDesignProtocols) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocols) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocols.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocols proto.InternalMessageInfo

func (m *NetworkDesignProtocolsBGPEVPN) Reset()      { *m = NetworkDesignProtocolsBGPEVPN{} }
func (*NetworkDesignProtocolsBGPEVPN) ProtoMessage() {}
func (*NetworkDesignProtocolsBGPEVPN) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{19}
}
func (m *NetworkDesignProtocolsBGPEVPN) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsBGPEVPN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsBGPEVPN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsBGPEVPN.Merge(m, src)
}
func (m *NetworkDesignProtocolsBGPEVPN) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsBGPEVPN) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsBGPEVPN.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsBGPEVPN proto.InternalMessageInfo

func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) Reset() {
	*m = NetworkDesignProtocolsBGPLabeledUnicastv4{}
}
func (*NetworkDesignProtocolsBGPLabeledUnicastv4) ProtoMessage() {}
func (*NetworkDesignProtocolsBGPLabeledUnicastv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{20}
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsBGPLabeledUnicastv4.Merge(m, src)
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsBGPLabeledUnicastv4.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsBGPLabeledUnicastv4 proto.InternalMessageInfo

func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) Reset() {
	*m = NetworkDesignProtocolsBGPLabeledUnicastv6{}
}
func (*NetworkDesignProtocolsBGPLabeledUnicastv6) ProtoMessage() {}
func (*NetworkDesignProtocolsBGPLabeledUnicastv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{21}
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsBGPLabeledUnicastv6.Merge(m, src)
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsBGPLabeledUnicastv6.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsBGPLabeledUnicastv6 proto.InternalMessageInfo

func (m *NetworkDesignProtocolsBGPRouteTarget) Reset()      { *m = NetworkDesignProtocolsBGPRouteTarget{} }
func (*NetworkDesignProtocolsBGPRouteTarget) ProtoMessage() {}
func (*NetworkDesignProtocolsBGPRouteTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{22}
}
func (m *NetworkDesignProtocolsBGPRouteTarget) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsBGPRouteTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsBGPRouteTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsBGPRouteTarget.Merge(m, src)
}
func (m *NetworkDesignProtocolsBGPRouteTarget) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsBGPRouteTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsBGPRouteTarget.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsBGPRouteTarget proto.InternalMessageInfo

func (m *NetworkDesignProtocolsBGPVPNv4) Reset()      { *m = NetworkDesignProtocolsBGPVPNv4{} }
func (*NetworkDesignProtocolsBGPVPNv4) ProtoMessage() {}
func (*NetworkDesignProtocolsBGPVPNv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{23}
}
func (m *NetworkDesignProtocolsBGPVPNv4) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsBGPVPNv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsBGPVPNv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsBGPVPNv4.Merge(m, src)
}
func (m *NetworkDesignProtocolsBGPVPNv4) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsBGPVPNv4) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsBGPVPNv4.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsBGPVPNv4 proto.InternalMessageInfo

func (m *NetworkDesignProtocolsBGPVPNv6) Reset()      { *m = NetworkDesignProtocolsBGPVPNv6{} }
func (*NetworkDesignProtocolsBGPVPNv6) ProtoMessage() {}
func (*NetworkDesignProtocolsBGPVPNv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{24}
}
func (m *NetworkDesignProtocolsBGPVPNv6) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsBGPVPNv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsBGPVPNv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsBGPVPNv6.Merge(m, src)
}
func (m *NetworkDesignProtocolsBGPVPNv6) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsBGPVPNv6) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsBGPVPNv6.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsBGPVPNv6 proto.InternalMessageInfo

func (m *NetworkDesignProtocolsEBGP) Reset()      { *m = NetworkDesignProtocolsEBGP{} }
func (*NetworkDesignProtocolsEBGP) ProtoMessage() {}
func (*NetworkDesignProtocolsEBGP) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{25}
}
func (m *NetworkDesignProtocolsEBGP) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsEBGP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsEBGP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsEBGP.Merge(m, src)
}
func (m *NetworkDesignProtocolsEBGP) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsEBGP) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsEBGP.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsEBGP proto.InternalMessageInfo

func (m *NetworkDesignProtocolsIBGP) Reset()      { *m = NetworkDesignProtocolsIBGP{} }
func (*NetworkDesignProtocolsIBGP) ProtoMessage() {}
func (*NetworkDesignProtocolsIBGP) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{26}
}
func (m *NetworkDesignProtocolsIBGP) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsIBGP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsIBGP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsIBGP.Merge(m, src)
}
func (m *NetworkDesignProtocolsIBGP) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsIBGP) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsIBGP.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsIBGP proto.InternalMessageInfo

func (m *NetworkDesignProtocolsISIS) Reset()      { *m = NetworkDesignProtocolsISIS{} }
func (*NetworkDesignProtocolsISIS) ProtoMessage() {}
func (*NetworkDesignProtocolsISIS) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{27}
}
func (m *NetworkDesignProtocolsISIS) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsISIS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsISIS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsISIS.Merge(m, src)
}
func (m *NetworkDesignProtocolsISIS) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsISIS) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsISIS.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsISIS proto.InternalMessageInfo

func (m *NetworkDesignProtocolsOSPF) Reset()      { *m = NetworkDesignProtocolsOSPF{} }
func (*NetworkDesignProtocolsOSPF) ProtoMessage() {}
func (*NetworkDesignProtocolsOSPF) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{28}
}
func (m *NetworkDesignProtocolsOSPF) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignProtocolsOSPF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignProtocolsOSPF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignProtocolsOSPF.Merge(m, src)
}
func (m *NetworkDesignProtocolsOSPF) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignProtocolsOSPF) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignProtocolsOSPF.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignProtocolsOSPF proto.InternalMessageInfo

func (m *NetworkDesignSpec) Reset()      { *m = NetworkDesignSpec{} }
func (*NetworkDesignSpec) ProtoMessage() {}
func (*NetworkDesignSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{29}
}
func (m *NetworkDesignSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignSpec.Merge(m, src)
}
func (m *NetworkDesignSpec) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignSpec.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignSpec proto.InternalMessageInfo

func (m *NetworkDesignStatus) Reset()      { *m = NetworkDesignStatus{} }
func (*NetworkDesignStatus) ProtoMessage() {}
func (*NetworkDesignStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{30}
}
func (m *NetworkDesignStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NetworkDesignStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *NetworkDesignStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDesignStatus.Merge(m, src)
}
func (m *NetworkDesignStatus) XXX_Size() int {
	return m.Size()
}
func (m *NetworkDesignStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDesignStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDesignStatus proto.InternalMessageInfo

func (m *OSPFLinkParameters) Reset()      { *m = OSPFLinkParameters{} }
func (*OSPFLinkParameters) ProtoMessage() {}
func (*OSPFLinkParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_be0ea17e45e04b9b, []int{31}
}
func (m *OSPFLinkParameters) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OSPFLinkParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *OSPFLinkParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSPFLinkParameters.Merge(m, src)
}
func (m *OSPFLinkParameters) XXX_Size() int {
	return m.Size()
}
func (m *OSPFLinkParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_OSPFLinkParameters.DiscardUnknown(m)
}

var xxx_messageInfo_OSPFLinkParameters proto.InternalMessageInfo

func init() {
	proto.RegisterType((*BFDLinkParameters)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.BFDLinkParameters")
	proto.RegisterType((*BGPLinkParameters)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.BGPLinkParameters")
	proto.RegisterType((*IGPLinkParameters)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.IGPLinkParameters")
	proto.RegisterType((*ISISLinkParameters)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.ISISLinkParameters")
	proto.RegisterType((*NetworkDesign)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesign")
	proto.RegisterType((*NetworkDesignEncapsulation)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignEncapsulation")
	proto.RegisterType((*NetworkDesignEncapsulationMPLS)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignEncapsulationMPLS")
	proto.RegisterType((*NetworkDesignEncapsulationMPLSLDP)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignEncapsulationMPLSLDP")
	proto.RegisterType((*NetworkDesignEncapsulationMPLSRSVP)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignEncapsulationMPLSRSVP")
	proto.RegisterType((*NetworkDesignEncapsulationMPLSSR)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignEncapsulationMPLSSR")
	proto.RegisterType((*NetworkDesignEncapsulationMPLSSRv6MicroSID)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignEncapsulationMPLSSRv6MicroSID")
	proto.RegisterType((*NetworkDesignEncapsulationSRv6)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignEncapsulationSRv6")
	proto.RegisterType((*NetworkDesignEncapsulationVXLAN)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignEncapsulationVXLAN")
	proto.RegisterType((*NetworkDesignInterfaceParameters)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignInterfaceParameters")
	proto.RegisterType((*NetworkDesignInterfaces)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignInterfaces")
	proto.RegisterType((*NetworkDesignInterfacesLoopback)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignInterfacesLoopback")
	proto.RegisterType((*NetworkDesignInterfacesUnderlay)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignInterfacesUnderlay")
	proto.RegisterType((*NetworkDesignList)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignList")
	proto.RegisterType((*NetworkDesignProtocols)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocols")
	proto.RegisterType((*NetworkDesignProtocolsBGPEVPN)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsBGPEVPN")
	proto.RegisterType((*NetworkDesignProtocolsBGPLabeledUnicastv4)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsBGPLabeledUnicastv4")
	proto.RegisterType((*NetworkDesignProtocolsBGPLabeledUnicastv6)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsBGPLabeledUnicastv6")
	proto.RegisterType((*NetworkDesignProtocolsBGPRouteTarget)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsBGPRouteTarget")
	proto.RegisterType((*NetworkDesignProtocolsBGPVPNv4)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsBGPVPNv4")
	proto.RegisterType((*NetworkDesignProtocolsBGPVPNv6)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsBGPVPNv6")
	proto.RegisterType((*NetworkDesignProtocolsEBGP)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsEBGP")
	proto.RegisterType((*NetworkDesignProtocolsIBGP)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsIBGP")
	proto.RegisterType((*NetworkDesignProtocolsISIS)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsISIS")
	proto.RegisterType((*NetworkDesignProtocolsOSPF)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignProtocolsOSPF")
	proto.RegisterType((*NetworkDesignSpec)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignSpec")
	proto.RegisterType((*NetworkDesignStatus)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.NetworkDesignStatus")
	proto.RegisterType((*OSPFLinkParameters)(nil), "github.com.kubenet_dev.apis.apis.network.core.v1alpha1.OSPFLinkParameters")
}

func init() {
	proto.RegisterFile("github.com/kubenet-dev/apis/apis/network/core/v1alpha1/generated.proto", fileDescriptor_be0ea17e45e04b9b)
}

var fileDescriptor_be0ea17e45e04b9b = []byte{
	// 1903 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcd, 0x6f, 0x1b, 0xc7,
	0x15, 0xf7, 0x92, 0xa2, 0x44, 0x3e, 0x5a, 0x76, 0x34, 0x02, 0x1c, 0x5a, 0x68, 0xb8, 0xca, 0x36,
	0x2d, 0x94, 0xa4, 0x59, 0xc6, 0x86, 0x4b, 0xa4, 0x87, 0x02, 0xd1, 0x5a, 0x92, 0x41, 0x94, 0x94,
	0x89, 0xa1, 0xac, 0xba, 0x81, 0x81, 0x74, 0xb8, 0x1c, 0xad, 0x36, 0x5a, 0xee, 0x2e, 0x76, 0x97,
	0x2c, 0x8d, 0x16, 0x68, 0x9a, 0x73, 0x81, 0x16, 0x3d, 0xf5, 0x54, 0xb4, 0x05, 0x8a, 0x5e, 0xfa,
	0x1f, 0xf4, 0xde, 0xfa, 0x52, 0x20, 0x40, 0x51, 0x20, 0x97, 0x10, 0xf5, 0xe6, 0xde, 0x53, 0x81,
	0x02, 0x3e, 0x15, 0xf3, 0xb1, 0xe4, 0x2e, 0x29, 0x5a, 0x4e, 0x42, 0x05, 0xc8, 0x45, 0xda, 0x79,
	0xf3, 0xe6, 0xfd, 0x7e, 0x6f, 0xde, 0x7c, 0xbc, 0x79, 0x84, 0x03, 0xcb, 0x8e, 0x4e, 0x07, 0x5d,
	0xdd, 0xf4, 0xfa, 0xb5, 0xb3, 0x41, 0x97, 0xba, 0x34, 0x7a, 0xab, 0x47, 0x87, 0x35, 0xe2, 0xdb,
	0xa1, 0xf8, 0xe3, 0xd2, 0xe8, 0x27, 0x5e, 0x70, 0x56, 0x33, 0xbd, 0x80, 0xd6, 0x86, 0xb7, 0x88,
	0xe3, 0x9f, 0x92, 0x5b, 0x35, 0x8b, 0xba, 0x34, 0x20, 0x11, 0xed, 0xe9, 0x7e, 0xe0, 0x45, 0x1e,
	0xaa, 0x4f, 0xed, 0xe8, 0xd2, 0xce, 0xfb, 0x3d, 0x3a, 0xd4, 0x99, 0x09, 0xf1, 0x47, 0xda, 0xd1,
	0x99, 0x1d, 0x3d, 0xb1, 0xb3, 0xf5, 0x56, 0x0a, 0xdf, 0xf2, 0x2c, 0xaf, 0xc6, 0xcd, 0x75, 0x07,
	0x27, 0xbc, 0xc5, 0x1b, 0xfc, 0x4b, 0xc0, 0x6c, 0xdd, 0x4d, 0xd3, 0x3d, 0xf1, 0x82, 0x3e, 0x27,
	0x6b, 0x9e, 0x7a, 0x01, 0xf5, 0x04, 0x5d, 0xd3, 0x73, 0x7b, 0x76, 0x64, 0x7b, 0xee, 0x42, 0xae,
	0x5b, 0xbb, 0x19, 0x9f, 0xed, 0x9e, 0xed, 0xf1, 0x7f, 0x62, 0x7c, 0x97, 0x98, 0x67, 0xd4, 0xed,
	0xd5, 0x6c, 0x9f, 0xf4, 0x17, 0x9b, 0xb8, 0x73, 0xf6, 0x4e, 0xa8, 0xdb, 0x1c, 0xb2, 0x4f, 0xcc,
	0x53, 0xdb, 0xa5, 0xc1, 0xe3, 0x9a, 0x7f, 0x66, 0x09, 0x1b, 0x7d, 0x1a, 0x91, 0xda, 0x70, 0x7e,
	0x54, 0x7d, 0xd1, 0xa8, 0x60, 0xe0, 0x46, 0x76, 0x9f, 0xd6, 0x42, 0xf3, 0x94, 0xf6, 0xc9, 0xec,
	0x38, 0xed, 0xbf, 0x0a, 0x6c, 0x18, 0x07, 0x7b, 0x4d, 0xdb, 0x3d, 0x6b, 0x93, 0x80, 0xf4, 0x69,
	0x44, 0x83, 0x10, 0x7d, 0x0b, 0xd6, 0xa8, 0x4b, 0xba, 0x0e, 0xed, 0x55, 0x94, 0x6d, 0x65, 0xa7,
	0x68, 0x94, 0xe3, 0xb1, 0xba, 0xb6, 0x2f, 0x44, 0x38, 0xe9, 0x43, 0x2a, 0x14, 0xfa, 0xb6, 0x7b,
	0x34, 0xaa, 0xe4, 0xb6, 0x95, 0x9d, 0x75, 0xa3, 0x14, 0x8f, 0xd5, 0x42, 0x8b, 0x09, 0xb0, 0x90,
	0x4b, 0x05, 0x3c, 0xaa, 0xe4, 0x33, 0x0a, 0x58, 0x28, 0xe0, 0x11, 0x7a, 0x13, 0x4a, 0x7d, 0xdb,
	0xdd, 0x37, 0x4f, 0x3d, 0x3c, 0xaa, 0xac, 0x70, 0xa5, 0xf5, 0x78, 0xac, 0x96, 0x5a, 0x89, 0x10,
	0x4f, 0xfb, 0x91, 0x0e, 0xd0, 0x1f, 0x38, 0x91, 0xed, 0x3b, 0x36, 0x0d, 0x2a, 0x05, 0xae, 0x7d,
	0x2d, 0x1e, 0xab, 0xd0, 0x9a, 0x48, 0x71, 0x4a, 0x03, 0xdd, 0x84, 0x7c, 0x14, 0x39, 0x95, 0x55,
	0xae, 0xb8, 0x16, 0x8f, 0xd5, 0xfc, 0xd1, 0x51, 0x13, 0x33, 0x99, 0xa6, 0xc3, 0x86, 0x71, 0xaf,
	0x3d, 0xe3, 0xf5, 0x4d, 0xc8, 0x77, 0x4f, 0x12, 0x8f, 0xb9, 0xbe, 0x71, 0xb0, 0x87, 0x99, 0x4c,
	0xfb, 0xab, 0x02, 0x1b, 0x8d, 0xb9, 0x01, 0xef, 0x42, 0x59, 0x2e, 0xbd, 0xa3, 0xc7, 0x3e, 0xe5,
	0x03, 0x4b, 0x46, 0x35, 0x1e, 0xab, 0xe5, 0xc3, 0xa9, 0xf8, 0x59, 0xb6, 0x89, 0xd3, 0x43, 0xd8,
	0x44, 0xfb, 0x24, 0x0c, 0xed, 0x21, 0xe5, 0x73, 0x28, 0x27, 0xba, 0x2d, 0x44, 0x38, 0xe9, 0x4b,
	0x98, 0xe5, 0xe7, 0x99, 0x21, 0x0d, 0x56, 0xfb, 0x34, 0x0a, 0x6c, 0x53, 0x4e, 0x1f, 0xc4, 0x63,
	0x75, 0xb5, 0xc5, 0x25, 0x58, 0xf6, 0x68, 0xff, 0x52, 0x00, 0x35, 0x3a, 0x8d, 0xce, 0x0c, 0xfd,
	0xdf, 0x28, 0xb0, 0x61, 0x5b, 0x7e, 0x56, 0xca, 0xbd, 0x28, 0xdf, 0x6e, 0xe8, 0x5f, 0x6c, 0xd7,
	0xe9, 0x73, 0xb3, 0x64, 0xdc, 0x7c, 0x32, 0x56, 0xaf, 0xc4, 0x63, 0x75, 0x7e, 0x02, 0xf1, 0x3c,
	0x3c, 0x7a, 0x03, 0x56, 0x48, 0x40, 0x09, 0x9f, 0x8e, 0x92, 0x71, 0x83, 0xad, 0x98, 0x26, 0x1d,
	0x52, 0xe7, 0xd9, 0x58, 0x2d, 0x71, 0x1f, 0x58, 0x03, 0x73, 0x1d, 0xed, 0x9f, 0x39, 0x58, 0x97,
	0x53, 0xbb, 0x47, 0x43, 0xdb, 0x72, 0xd1, 0x8f, 0xa1, 0xc8, 0x76, 0x48, 0x8f, 0x44, 0x44, 0x3a,
	0xf2, 0xb6, 0x2e, 0x76, 0x86, 0x9e, 0xde, 0x19, 0xba, 0x7f, 0x66, 0x09, 0x27, 0x98, 0xb6, 0x3e,
	0xbc, 0xa5, 0xdf, 0xef, 0x7e, 0x40, 0xcd, 0xa8, 0x45, 0x23, 0x62, 0x20, 0xc9, 0x17, 0xa6, 0x32,
	0x3c, 0xb1, 0x8a, 0xce, 0x60, 0x25, 0xf4, 0xa9, 0xc9, 0xf9, 0x7d, 0x89, 0x69, 0xca, 0xd0, 0xee,
	0xf8, 0xd4, 0x34, 0xae, 0x4a, 0xd8, 0x15, 0xd6, 0xc2, 0x1c, 0x04, 0x85, 0xb0, 0x1a, 0x46, 0x24,
	0x1a, 0x84, 0x3c, 0xf4, 0xe5, 0xdb, 0x3f, 0x58, 0x0e, 0x1c, 0x37, 0x69, 0x5c, 0x93, 0x80, 0xab,
	0xa2, 0x8d, 0x25, 0x94, 0xf6, 0x51, 0x1e, 0xb6, 0x32, 0xfa, 0xfb, 0xae, 0x49, 0xfc, 0x70, 0xe0,
	0x10, 0x76, 0xf6, 0xa1, 0x11, 0x14, 0x86, 0x23, 0x87, 0xb8, 0x72, 0x7e, 0x7f, 0xb8, 0x14, 0x4a,
	0x19, 0x88, 0xe3, 0x87, 0xcd, 0xdd, 0x43, 0x71, 0x58, 0xf0, 0x4f, 0x2c, 0x00, 0x51, 0x04, 0x2b,
	0x7d, 0xdf, 0x09, 0xe5, 0xd4, 0x1f, 0x2f, 0x1f, 0xb8, 0xd5, 0x6e, 0x76, 0x8c, 0x22, 0x8b, 0x01,
	0xfb, 0xc2, 0x1c, 0x8d, 0xa1, 0x86, 0xc1, 0xb0, 0x2e, 0x23, 0x70, 0x09, 0xa8, 0x1d, 0x3c, 0xac,
	0x0b, 0xd4, 0x0e, 0x3e, 0xae, 0x63, 0x8e, 0xc6, 0x82, 0x50, 0x7d, 0x3e, 0x51, 0x14, 0x41, 0xde,
	0xe9, 0xf9, 0x32, 0x0c, 0x3f, 0xba, 0x9c, 0xd9, 0x68, 0xee, 0xb5, 0xc5, 0x79, 0xd3, 0xdc, 0x6b,
	0x63, 0x06, 0x87, 0x7c, 0xc8, 0x85, 0x81, 0x0c, 0xc1, 0xc3, 0xcb, 0x01, 0xed, 0x60, 0x63, 0x35,
	0x1e, 0xab, 0xb9, 0x0e, 0xc6, 0xb9, 0x30, 0x40, 0x23, 0x58, 0x09, 0xc2, 0xa1, 0x2f, 0x03, 0xf0,
	0xde, 0xe5, 0x60, 0xe2, 0xce, 0x71, 0x5b, 0x04, 0x81, 0x7d, 0x61, 0x8e, 0xa8, 0x7d, 0x13, 0x5e,
	0xbd, 0x70, 0x7a, 0xb4, 0xd7, 0x40, 0xbb, 0xd8, 0xb4, 0xa6, 0xc1, 0xf6, 0x45, 0x4e, 0x6b, 0xdf,
	0x81, 0x37, 0x2e, 0xd2, 0x19, 0xd6, 0x5b, 0xb6, 0x19, 0x78, 0x9d, 0xc6, 0x9e, 0xf6, 0x27, 0xe5,
	0x79, 0x2b, 0x84, 0xa9, 0xa2, 0x8f, 0x94, 0xf4, 0x12, 0xe9, 0x5e, 0x56, 0xb4, 0xa6, 0xa4, 0x8c,
	0xab, 0xf1, 0x58, 0x2d, 0x26, 0x2d, 0xbe, 0x60, 0xb4, 0x57, 0x41, 0xbd, 0x60, 0xab, 0x6b, 0xff,
	0x50, 0x66, 0x66, 0xa7, 0xe1, 0x46, 0x34, 0x38, 0x21, 0x26, 0x4d, 0x5d, 0x0c, 0x16, 0x14, 0xfd,
	0x80, 0x9e, 0xd8, 0x23, 0xca, 0xee, 0xa8, 0xfc, 0x4e, 0xf9, 0xf6, 0xf7, 0xb2, 0x0e, 0xb1, 0x6c,
	0x8b, 0xff, 0x13, 0xbe, 0xc8, 0x6c, 0x4b, 0x67, 0xd9, 0xd6, 0xd4, 0x97, 0x36, 0x37, 0x61, 0xbc,
	0x24, 0xcf, 0xbe, 0x62, 0x5b, 0x9a, 0xc4, 0x13, 0xe3, 0xe8, 0x5d, 0x00, 0xd2, 0xeb, 0x05, 0x34,
	0x0c, 0x6d, 0xd7, 0x92, 0xf7, 0xd0, 0x76, 0x72, 0x27, 0xec, 0x4e, 0x7a, 0x9e, 0x65, 0x5a, 0x38,
	0x35, 0x46, 0xfb, 0x43, 0x0e, 0x5e, 0x3e, 0xdf, 0x9f, 0x10, 0xfd, 0x42, 0x81, 0xa2, 0xe3, 0x79,
	0x3e, 0xa3, 0xb7, 0xd4, 0x23, 0x74, 0x8a, 0xd1, 0x94, 0xe6, 0x45, 0x34, 0x92, 0x16, 0x9e, 0xc0,
	0x72, 0x0e, 0x03, 0xb7, 0x47, 0x03, 0x87, 0x3c, 0x96, 0x5b, 0x79, 0xd9, 0x1c, 0x1e, 0x48, 0xf3,
	0x82, 0x43, 0xd2, 0xc2, 0x13, 0x58, 0xed, 0x6f, 0xca, 0xcc, 0xba, 0x98, 0xe7, 0x8f, 0xfe, 0xa8,
	0x00, 0xf8, 0xb3, 0x99, 0xc9, 0xc3, 0xe5, 0x32, 0x4d, 0x25, 0x2a, 0x3b, 0x32, 0xc8, 0x17, 0xae,
	0x45, 0x9c, 0x62, 0xa5, 0x7d, 0x96, 0x5b, 0xe8, 0x48, 0xe2, 0xf6, 0xd7, 0xc2, 0x11, 0xf4, 0x5d,
	0x28, 0x0f, 0x1d, 0xe2, 0x1e, 0x11, 0xcb, 0x4a, 0x16, 0x7e, 0xd1, 0xd8, 0x94, 0xa6, 0xca, 0xc7,
	0xcd, 0xdd, 0x43, 0xd9, 0x85, 0xd3, 0x7a, 0xa8, 0x37, 0xcd, 0x4d, 0xbf, 0x44, 0x3e, 0x34, 0xf7,
	0x06, 0x99, 0x49, 0xc0, 0x3f, 0x55, 0x60, 0x23, 0xe3, 0x4d, 0xd3, 0x0e, 0x23, 0xf4, 0x68, 0x2e,
	0xdd, 0xd3, 0x5f, 0x2c, 0xdd, 0x63, 0xa3, 0x79, 0xb2, 0x37, 0x39, 0x08, 0x12, 0x49, 0x2a, 0xd5,
	0xfb, 0x00, 0x0a, 0x76, 0x44, 0xfb, 0x2c, 0xe1, 0x60, 0xc7, 0xcd, 0xfe, 0x52, 0xe2, 0x65, 0xac,
	0x4b, 0xc4, 0x42, 0x83, 0xd9, 0xc6, 0x02, 0x42, 0xfb, 0x14, 0xe0, 0x46, 0x46, 0xaf, 0xcd, 0x9e,
	0x67, 0xa6, 0xe7, 0x84, 0xc8, 0x87, 0x15, 0x2f, 0xf4, 0x4f, 0xa4, 0x83, 0x78, 0x29, 0x2c, 0x26,
	0xd6, 0xef, 0x77, 0xda, 0x07, 0xe2, 0xde, 0x63, 0x5f, 0x98, 0x23, 0x31, 0x44, 0x3b, 0xb4, 0x93,
	0x44, 0x6b, 0xc9, 0x88, 0x2c, 0x89, 0x17, 0x88, 0xec, 0x0b, 0x73, 0x24, 0x8e, 0xd8, 0xb5, 0x92,
	0x3b, 0x7e, 0xd9, 0x88, 0xc6, 0x3d, 0x79, 0xb7, 0xb3, 0x2f, 0xcc, 0x91, 0x18, 0x22, 0x65, 0x88,
	0x2b, 0x97, 0x81, 0xb8, 0x3f, 0x41, 0xdc, 0xe7, 0x88, 0x0c, 0x09, 0xfd, 0x0c, 0xd6, 0xba, 0x96,
	0xbf, 0x7f, 0xdc, 0x3e, 0xe4, 0x6f, 0xd7, 0xf2, 0xed, 0x07, 0xcb, 0x05, 0x35, 0xee, 0xb5, 0x99,
	0x71, 0xf1, 0x84, 0x94, 0x0d, 0x9c, 0x40, 0xa2, 0x0f, 0x15, 0x28, 0x76, 0x2d, 0xff, 0xb8, 0x7d,
	0x38, 0xbc, 0xc3, 0x9f, 0xc4, 0xcb, 0xca, 0x65, 0xd3, 0xf8, 0xdc, 0xba, 0x38, 0xf2, 0x93, 0x16,
	0x9e, 0xa0, 0xa6, 0x29, 0xd4, 0x2b, 0x6b, 0x97, 0x48, 0xa1, 0x9e, 0xa1, 0x50, 0x9f, 0x50, 0xa8,
	0xa3, 0xdf, 0x2a, 0x70, 0xad, 0x6b, 0xf9, 0xd8, 0x1b, 0x44, 0xf4, 0x88, 0x04, 0x16, 0x8d, 0x2a,
	0x45, 0x4e, 0xe4, 0xd1, 0xd2, 0x89, 0xa4, 0x30, 0x0c, 0x14, 0x8f, 0xd5, 0x6b, 0x59, 0x19, 0x9e,
	0xe1, 0x81, 0xfe, 0xa2, 0xc0, 0x66, 0xd7, 0xf2, 0x9b, 0xa4, 0x4b, 0x1d, 0xda, 0x7b, 0xe0, 0xda,
	0x26, 0x09, 0xa3, 0xe1, 0x9d, 0x4a, 0x89, 0xf3, 0x23, 0x4b, 0xe7, 0x37, 0x0b, 0x64, 0xbc, 0x1c,
	0x8f, 0xd5, 0xcd, 0x73, 0x3a, 0xf0, 0x79, 0xb4, 0x16, 0xd0, 0xad, 0x57, 0xe0, 0xab, 0xa1, 0x5b,
	0x5f, 0x44, 0xb7, 0x7e, 0x1e, 0xdd, 0xba, 0xa6, 0xc2, 0x2b, 0xcf, 0xdd, 0x35, 0xda, 0x9b, 0xf0,
	0xfa, 0x0b, 0x4f, 0xd5, 0xe7, 0x51, 0xae, 0x6b, 0xdf, 0x86, 0xd7, 0x5e, 0x64, 0x91, 0x68, 0xdb,
	0x33, 0xf9, 0xfc, 0xdc, 0xc6, 0xba, 0x50, 0xa3, 0xae, 0xbd, 0x3f, 0xf3, 0x74, 0xcf, 0x9c, 0x48,
	0x48, 0x83, 0x55, 0x12, 0xb6, 0x3d, 0xcf, 0x91, 0xa5, 0x2a, 0x5e, 0x2b, 0xda, 0xed, 0x30, 0x09,
	0x96, 0x3d, 0xe8, 0x15, 0x71, 0x9d, 0xcb, 0x6a, 0x94, 0xbc, 0xab, 0xa6, 0xf7, 0xf0, 0xef, 0x94,
	0x45, 0x08, 0xec, 0x6c, 0x45, 0x37, 0x20, 0x47, 0x44, 0x7e, 0xb3, 0x2e, 0xde, 0x70, 0xbb, 0x1d,
	0x9c, 0x23, 0x21, 0x7a, 0x1d, 0xd6, 0x1c, 0xcf, 0x24, 0xce, 0x6e, 0x47, 0x5a, 0xbe, 0x2e, 0x2d,
	0xaf, 0x35, 0x85, 0x18, 0x27, 0xfd, 0xe8, 0xfb, 0x70, 0x3d, 0x60, 0xb3, 0x82, 0xe9, 0x89, 0x43,
	0xcd, 0xc8, 0x0b, 0xc2, 0x4a, 0x7e, 0x3b, 0xbf, 0x53, 0x32, 0x36, 0xe3, 0xb1, 0x7a, 0x1d, 0x67,
	0xbb, 0xf0, 0xac, 0xae, 0xf6, 0x9f, 0xc5, 0x04, 0x3b, 0x8d, 0x0e, 0xda, 0x81, 0xa2, 0xed, 0x86,
	0x11, 0x71, 0xcd, 0xa4, 0x5e, 0xc7, 0x8f, 0x8a, 0x86, 0x94, 0xe1, 0x49, 0x2f, 0x7a, 0x1b, 0x0a,
	0x0e, 0x1d, 0x52, 0x47, 0xbe, 0x00, 0xb6, 0x92, 0x6b, 0xfb, 0x9c, 0x6a, 0x94, 0x50, 0x44, 0x2a,
	0x14, 0x48, 0x40, 0x49, 0xc2, 0x97, 0x17, 0x30, 0x76, 0x99, 0x00, 0x0b, 0x39, 0xba, 0x03, 0x57,
	0xfb, 0x64, 0xb4, 0x7f, 0xb7, 0xd5, 0x6e, 0x93, 0xe8, 0x34, 0x94, 0x15, 0xbb, 0x97, 0xe2, 0xb1,
	0x7a, 0xb5, 0x95, 0x92, 0xe3, 0x8c, 0x56, 0x12, 0x91, 0xc2, 0x82, 0x88, 0xfc, 0x6f, 0xa1, 0xc3,
	0xec, 0x46, 0xff, 0x1c, 0x0e, 0xbf, 0x03, 0x6b, 0x43, 0x1a, 0x84, 0xb6, 0xe7, 0x4a, 0x97, 0xab,
	0x49, 0x8c, 0x8e, 0x85, 0xf8, 0xd9, 0x58, 0x2d, 0x33, 0x9b, 0xb2, 0x89, 0x13, 0x75, 0xb4, 0x2d,
	0x6b, 0x76, 0x79, 0x61, 0x3f, 0x29, 0x64, 0x31, 0xdf, 0x45, 0xa5, 0xee, 0x72, 0x3c, 0xff, 0x7d,
	0x7e, 0x26, 0x27, 0xec, 0xf8, 0xd4, 0x44, 0x3f, 0x07, 0xb0, 0x27, 0x19, 0xb8, 0x4c, 0x9a, 0xee,
	0x2f, 0xf9, 0x75, 0x23, 0xca, 0xce, 0xd3, 0x36, 0x4e, 0x41, 0xa2, 0x9f, 0x42, 0xc9, 0x4f, 0x42,
	0x20, 0x53, 0xa8, 0xc3, 0x25, 0x1f, 0x87, 0xbc, 0x46, 0x3e, 0x69, 0xe2, 0x29, 0x1e, 0xfa, 0xa5,
	0x02, 0xeb, 0x34, 0xfd, 0xc2, 0x5e, 0x6a, 0x4a, 0x95, 0x79, 0xbb, 0x8b, 0x5b, 0x2d, 0x11, 0x45,
	0x5c, 0x86, 0xb3, 0xe0, 0xda, 0x9f, 0x15, 0xd8, 0x3c, 0xa7, 0xf6, 0x88, 0x7e, 0xa5, 0xc0, 0xc6,
	0xe4, 0xe7, 0x14, 0xda, 0x13, 0x52, 0x19, 0xac, 0x83, 0x0c, 0xd5, 0x13, 0x2f, 0xe8, 0x73, 0xa2,
	0xe2, 0x97, 0x18, 0x41, 0x75, 0x32, 0x74, 0xca, 0xf3, 0xee, 0xac, 0xb5, 0x69, 0xdd, 0x79, 0xae,
	0x0b, 0xcf, 0x63, 0x6b, 0x7f, 0x57, 0x00, 0xb1, 0xc5, 0xfd, 0x75, 0xa8, 0x91, 0x7f, 0x23, 0x53,
	0x23, 0x2f, 0x66, 0xf7, 0x9a, 0xf1, 0xe8, 0xc9, 0xd3, 0xea, 0x95, 0x8f, 0x9f, 0x56, 0xaf, 0x7c,
	0xf2, 0xb4, 0x7a, 0xe5, 0xc3, 0xb8, 0xaa, 0x3c, 0x89, 0xab, 0xca, 0xc7, 0x71, 0x55, 0xf9, 0x24,
	0xae, 0x2a, 0xff, 0x8e, 0xab, 0xca, 0xaf, 0x3f, 0xab, 0x5e, 0x79, 0xaf, 0xfe, 0xc5, 0x7e, 0x9d,
	0xfb, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x95, 0xe1, 0xef, 0xa5, 0xd6, 0x1b, 0x00, 0x00,
}

func (m *BFDLinkParameters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BFDLinkParameters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BFDLinkParameters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TTL != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.TTL))
		i--
		dAtA[i] = 0x30
	}
	if m.Multiplier != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.Multiplier))
		i--
		dAtA[i] = 0x28
	}
	if m.MinEchoRx != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.MinEchoRx))
		i--
		dAtA[i] = 0x20
	}
	if m.MinRx != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.MinRx))
		i--
		dAtA[i] = 0x18
	}
	if m.MinTx != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.MinTx))
		i--
		dAtA[i] = 0x10
	}
	if m.Enabled != nil {
		i--
		if *m.Enabled {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BGPLinkParameters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BGPLinkParameters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BGPLinkParameters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BFD != nil {
		i--
		if *m.BFD {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *IGPLinkParameters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IGPLinkParameters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IGPLinkParameters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Metric != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.Metric))
		i--
		dAtA[i] = 0x20
	}
	if m.BFD != nil {
		i--
		if *m.BFD {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.Passive != nil {
		i--
		if *m.Passive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.NetworkType != nil {
		i -= len(*m.NetworkType)
		copy(dAtA[i:], *m.NetworkType)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.NetworkType)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ISISLinkParameters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ISISLinkParameters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ISISLinkParameters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Level != nil {
		i -= len(*m.Level)
		copy(dAtA[i:], *m.Level)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.Level)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.IGPLinkParameters.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *NetworkDesign) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesign) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesign) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *NetworkDesignEncapsulation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignEncapsulation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignEncapsulation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.SRV6 != nil {
		{
			size, err := m.SRV6.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.MPLS != nil {
		{
			size, err := m.MPLS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.VXLAN != nil {
		{
			size, err := m.VXLAN.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignEncapsulationMPLS) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignEncapsulationMPLS) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignEncapsulationMPLS) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RSVP != nil {
		{
			size, err := m.RSVP.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.SR != nil {
		{
			size, err := m.SR.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.LDP != nil {
		{
			size, err := m.LDP.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignEncapsulationMPLSLDP) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignEncapsulationMPLSLDP) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignEncapsulationMPLSLDP) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignEncapsulationMPLSRSVP) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignEncapsulationMPLSRSVP) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignEncapsulationMPLSRSVP) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignEncapsulationMPLSSR) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignEncapsulationMPLSSR) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignEncapsulationMPLSSR) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignEncapsulationSRv6) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignEncapsulationSRv6) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignEncapsulationSRv6) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MicroSID != nil {
		{
			size, err := m.MicroSID.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignEncapsulationVXLAN) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignEncapsulationVXLAN) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignEncapsulationVXLAN) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignInterfaceParameters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignInterfaceParameters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignInterfaceParameters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Addressing)
	copy(dAtA[i:], m.Addressing)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Addressing)))
	i--
	dAtA[i] = 0x12
	if len(m.Prefixes) > 0 {
		for iNdEx := len(m.Prefixes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Prefixes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignInterfaces) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignInterfaces) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignInterfaces) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Underlay != nil {
		{
			size, err := m.Underlay.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Loopback != nil {
		{
			size, err := m.Loopback.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignInterfacesLoopback) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignInterfacesLoopback) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignInterfacesLoopback) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.NetworkDesignInterfaceParameters.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *NetworkDesignInterfacesUnderlay) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignInterfacesUnderlay) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignInterfacesUnderlay) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BFD != nil {
		{
			size, err := m.BFD.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	i--
	if m.VLANTagging {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	{
		size, err := m.NetworkDesignInterfaceParameters.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *NetworkDesignList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.ListMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocols) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocols) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocols) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BGPLabeledUnicastv6 != nil {
		{
			size, err := m.BGPLabeledUnicastv6.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.BGPLabeledUnicastv4 != nil {
		{
			size, err := m.BGPLabeledUnicastv4.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.BGPRouteTarget != nil {
		{
			size, err := m.BGPRouteTarget.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.BGPVPNv6 != nil {
		{
			size, err := m.BGPVPNv6.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.BGPVPNv4 != nil {
		{
			size, err := m.BGPVPNv4.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.BGPEVPN != nil {
		{
			size, err := m.BGPEVPN.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.EBGP != nil {
		{
			size, err := m.EBGP.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.IBGP != nil {
		{
			size, err := m.IBGP.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.ISIS != nil {
		{
			size, err := m.ISIS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.OSPF != nil {
		{
			size, err := m.OSPF.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsBGPEVPN) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsBGPEVPN) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsBGPEVPN) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsBGPRouteTarget) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsBGPRouteTarget) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsBGPRouteTarget) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsBGPVPNv4) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsBGPVPNv4) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsBGPVPNv4) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsBGPVPNv6) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsBGPVPNv6) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsBGPVPNv6) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsEBGP) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsEBGP) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsEBGP) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.BFD {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	if m.ASPool != nil {
		i -= len(*m.ASPool)
		copy(dAtA[i:], *m.ASPool)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.ASPool)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsIBGP) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsIBGP) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsIBGP) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RouteReflectors) > 0 {
		for iNdEx := len(m.RouteReflectors) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RouteReflectors[iNdEx])
			copy(dAtA[i:], m.RouteReflectors[iNdEx])
			i = encodeVarintGenerated(dAtA, i, uint64(len(m.RouteReflectors[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	i--
	if m.LocalAS {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x10
	if m.AS != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.AS))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsISIS) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsISIS) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsISIS) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.BFD {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x28
	if m.MaxECMPPaths != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.MaxECMPPaths))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Areas) > 0 {
		for iNdEx := len(m.Areas) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Areas[iNdEx])
			copy(dAtA[i:], m.Areas[iNdEx])
			i = encodeVarintGenerated(dAtA, i, uint64(len(m.Areas[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	i -= len(m.Level)
	copy(dAtA[i:], m.Level)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Level)))
	i--
	dAtA[i] = 0x12
	if m.Instance != nil {
		i -= len(*m.Instance)
		copy(dAtA[i:], *m.Instance)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.Instance)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignProtocolsOSPF) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignProtocolsOSPF) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignProtocolsOSPF) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i--
	if m.BFD {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x28
	if m.MaxECMPPaths != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.MaxECMPPaths))
		i--
		dAtA[i] = 0x20
	}
	i -= len(m.Area)
	copy(dAtA[i:], m.Area)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Area)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.Version)
	copy(dAtA[i:], m.Version)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Version)))
	i--
	dAtA[i] = 0x12
	if m.Instance != nil {
		i -= len(*m.Instance)
		copy(dAtA[i:], *m.Instance)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.Instance)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Encapsultation != nil {
		{
			size, err := m.Encapsultation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Protocols != nil {
		{
			size, err := m.Protocols.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Interfaces != nil {
		{
			size, err := m.Interfaces.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *NetworkDesignStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NetworkDesignStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NetworkDesignStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.ConditionedStatus.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *OSPFLinkParameters) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OSPFLinkParameters) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OSPFLinkParameters) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Area != nil {
		i -= len(*m.Area)
		copy(dAtA[i:], *m.Area)
		i = encodeVarintGenerated(dAtA, i, uint64(len(*m.Area)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.IGPLinkParameters.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintGenerated(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenerated(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *BFDLinkParameters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Enabled != nil {
		n += 2
	}
	if m.MinTx != nil {
		n += 1 + sovGenerated(uint64(*m.MinTx))
	}
	if m.MinRx != nil {
		n += 1 + sovGenerated(uint64(*m.MinRx))
	}
	if m.MinEchoRx != nil {
		n += 1 + sovGenerated(uint64(*m.MinEchoRx))
	}
	if m.Multiplier != nil {
		n += 1 + sovGenerated(uint64(*m.Multiplier))
	}
	if m.TTL != nil {
		n += 1 + sovGenerated(uint64(*m.TTL))
	}
	return n
}

func (m *BGPLinkParameters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.BFD != nil {
		n += 2
	}
	return n
}

func (m *IGPLinkParameters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NetworkType != nil {
		l = len(*m.NetworkType)
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Passive != nil {
		n += 2
	}
	if m.BFD != nil {
		n += 2
	}
	if m.Metric != nil {
		n += 1 + sovGenerated(uint64(*m.Metric))
	}
	return n
}

func (m *ISISLinkParameters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.IGPLinkParameters.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if m.Level != nil {
		l = len(*m.Level)
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *NetworkDesign) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Status.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *NetworkDesignEncapsulation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VXLAN != nil {
		l = m.VXLAN.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.MPLS != nil {
		l = m.MPLS.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.SRV6 != nil {
		l = m.SRV6.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *NetworkDesignEncapsulationMPLS) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LDP != nil {
		l = m.LDP.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.SR != nil {
		l = m.SR.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.RSVP != nil {
		l = m.RSVP.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *NetworkDesignEncapsulationMPLSLDP) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignEncapsulationMPLSRSVP) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignEncapsulationMPLSSR) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignEncapsulationSRv6) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MicroSID != nil {
		l = m.MicroSID.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *NetworkDesignEncapsulationVXLAN) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignInterfaceParameters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Prefixes) > 0 {
		for _, e := range m.Prefixes {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	l = len(m.Addressing)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *NetworkDesignInterfaces) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Loopback != nil {
		l = m.Loopback.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Underlay != nil {
		l = m.Underlay.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *NetworkDesignInterfacesLoopback) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.NetworkDesignInterfaceParameters.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *NetworkDesignInterfacesUnderlay) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.NetworkDesignInterfaceParameters.Size()
	n += 1 + l + sovGenerated(uint64(l))
	n += 2
	if m.BFD != nil {
		l = m.BFD.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *NetworkDesignList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ListMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *NetworkDesignProtocols) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OSPF != nil {
		l = m.OSPF.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.ISIS != nil {
		l = m.ISIS.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.IBGP != nil {
		l = m.IBGP.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.EBGP != nil {
		l = m.EBGP.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.BGPEVPN != nil {
		l = m.BGPEVPN.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.BGPVPNv4 != nil {
		l = m.BGPVPNv4.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.BGPVPNv6 != nil {
		l = m.BGPVPNv6.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.BGPRouteTarget != nil {
		l = m.BGPRouteTarget.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.BGPLabeledUnicastv4 != nil {
		l = m.BGPLabeledUnicastv4.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.BGPLabeledUnicastv6 != nil {
		l = m.BGPLabeledUnicastv6.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *NetworkDesignProtocolsBGPEVPN) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignProtocolsBGPRouteTarget) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignProtocolsBGPVPNv4) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignProtocolsBGPVPNv6) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *NetworkDesignProtocolsEBGP) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ASPool != nil {
		l = len(*m.ASPool)
		n += 1 + l + sovGenerated(uint64(l))
	}
	n += 2
	return n
}

func (m *NetworkDesignProtocolsIBGP) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AS != nil {
		n += 1 + sovGenerated(uint64(*m.AS))
	}
	n += 2
	if len(m.RouteReflectors) > 0 {
		for _, s := range m.RouteReflectors {
			l = len(s)
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *NetworkDesignProtocolsISIS) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Instance != nil {
		l = len(*m.Instance)
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.Level)
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Areas) > 0 {
		for _, s := range m.Areas {
			l = len(s)
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	if m.MaxECMPPaths != nil {
		n += 1 + sovGenerated(uint64(*m.MaxECMPPaths))
	}
	n += 2
	return n
}

func (m *NetworkDesignProtocolsOSPF) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Instance != nil {
		l = len(*m.Instance)
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.Version)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Area)
	n += 1 + l + sovGenerated(uint64(l))
	if m.MaxECMPPaths != nil {
		n += 1 + sovGenerated(uint64(*m.MaxECMPPaths))
	}
	n += 2
	return n
}

func (m *NetworkDesignSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Interfaces != nil {
		l = m.Interfaces.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Protocols != nil {
		l = m.Protocols.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Encapsultation != nil {
		l = m.Encapsultation.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *NetworkDesignStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ConditionedStatus.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *OSPFLinkParameters) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.IGPLinkParameters.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if m.Area != nil {
		l = len(*m.Area)
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func sovGenerated(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenerated(x uint64) (n int) {
	return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *BFDLinkParameters) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BFDLinkParameters{`,
		`Enabled:` + valueToStringGenerated(this.Enabled) + `,`,
		`MinTx:` + valueToStringGenerated(this.MinTx) + `,`,
		`MinRx:` + valueToStringGenerated(this.MinRx) + `,`,
		`MinEchoRx:` + valueToStringGenerated(this.MinEchoRx) + `,`,
		`Multiplier:` + valueToStringGenerated(this.Multiplier) + `,`,
		`TTL:` + valueToStringGenerated(this.TTL) + `,`,
		`}`,
	}, "")
	return s
}
func (this *BGPLinkParameters) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BGPLinkParameters{`,
		`BFD:` + valueToStringGenerated(this.BFD) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IGPLinkParameters) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IGPLinkParameters{`,
		`NetworkType:` + valueToStringGenerated(this.NetworkType) + `,`,
		`Passive:` + valueToStringGenerated(this.Passive) + `,`,
		`BFD:` + valueToStringGenerated(this.BFD) + `,`,
		`Metric:` + valueToStringGenerated(this.Metric) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ISISLinkParameters) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ISISLinkParameters{`,
		`IGPLinkParameters:` + strings.Replace(strings.Replace(this.IGPLinkParameters.String(), "IGPLinkParameters", "IGPLinkParameters", 1), `&`, ``, 1) + `,`,
		`Level:` + valueToStringGenerated(this.Level) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesign) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesign{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "NetworkDesignSpec", "NetworkDesignSpec", 1), `&`, ``, 1) + `,`,
		`Status:` + strings.Replace(strings.Replace(this.Status.String(), "NetworkDesignStatus", "NetworkDesignStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignEncapsulation) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignEncapsulation{`,
		`VXLAN:` + strings.Replace(this.VXLAN.String(), "NetworkDesignEncapsulationVXLAN", "NetworkDesignEncapsulationVXLAN", 1) + `,`,
		`MPLS:` + strings.Replace(this.MPLS.String(), "NetworkDesignEncapsulationMPLS", "NetworkDesignEncapsulationMPLS", 1) + `,`,
		`SRV6:` + strings.Replace(this.SRV6.String(), "NetworkDesignEncapsulationSRv6", "NetworkDesignEncapsulationSRv6", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignEncapsulationMPLS) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignEncapsulationMPLS{`,
		`LDP:` + strings.Replace(this.LDP.String(), "NetworkDesignEncapsulationMPLSLDP", "NetworkDesignEncapsulationMPLSLDP", 1) + `,`,
		`SR:` + strings.Replace(this.SR.String(), "NetworkDesignEncapsulationMPLSSR", "NetworkDesignEncapsulationMPLSSR", 1) + `,`,
		`RSVP:` + strings.Replace(this.RSVP.String(), "NetworkDesignEncapsulationMPLSRSVP", "NetworkDesignEncapsulationMPLSRSVP", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignEncapsulationMPLSLDP) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignEncapsulationMPLSLDP{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignEncapsulationMPLSRSVP) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignEncapsulationMPLSRSVP{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignEncapsulationMPLSSR) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignEncapsulationMPLSSR{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignEncapsulationMPLSSRv6MicroSID) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignEncapsulationMPLSSRv6MicroSID{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignEncapsulationSRv6) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignEncapsulationSRv6{`,
		`MicroSID:` + strings.Replace(this.MicroSID.String(), "NetworkDesignEncapsulationMPLSSRv6MicroSID", "NetworkDesignEncapsulationMPLSSRv6MicroSID", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignEncapsulationVXLAN) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignEncapsulationVXLAN{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignInterfaceParameters) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForPrefixes := "[]Prefix{"
	for _, f := range this.Prefixes {
		repeatedStringForPrefixes += fmt.Sprintf("%v", f) + ","
	}
	repeatedStringForPrefixes += "}"
	s := strings.Join([]string{`&NetworkDesignInterfaceParameters{`,
		`Prefixes:` + repeatedStringForPrefixes + `,`,
		`Addressing:` + fmt.Sprintf("%v", this.Addressing) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignInterfaces) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignInterfaces{`,
		`Loopback:` + strings.Replace(this.Loopback.String(), "NetworkDesignInterfacesLoopback", "NetworkDesignInterfacesLoopback", 1) + `,`,
		`Underlay:` + strings.Replace(this.Underlay.String(), "NetworkDesignInterfacesUnderlay", "NetworkDesignInterfacesUnderlay", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignInterfacesLoopback) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignInterfacesLoopback{`,
		`NetworkDesignInterfaceParameters:` + strings.Replace(strings.Replace(this.NetworkDesignInterfaceParameters.String(), "NetworkDesignInterfaceParameters", "NetworkDesignInterfaceParameters", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignInterfacesUnderlay) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignInterfacesUnderlay{`,
		`NetworkDesignInterfaceParameters:` + strings.Replace(strings.Replace(this.NetworkDesignInterfaceParameters.String(), "NetworkDesignInterfaceParameters", "NetworkDesignInterfaceParameters", 1), `&`, ``, 1) + `,`,
		`VLANTagging:` + fmt.Sprintf("%v", this.VLANTagging) + `,`,
		`BFD:` + strings.Replace(this.BFD.String(), "BFDLinkParameters", "BFDLinkParameters", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignList) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]NetworkDesign{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(strings.Replace(f.String(), "NetworkDesign", "NetworkDesign", 1), `&`, ``, 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&NetworkDesignList{`,
		`ListMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ListMeta), "ListMeta", "v1.ListMeta", 1), `&`, ``, 1) + `,`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocols) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocols{`,
		`OSPF:` + strings.Replace(this.OSPF.String(), "NetworkDesignProtocolsOSPF", "NetworkDesignProtocolsOSPF", 1) + `,`,
		`ISIS:` + strings.Replace(this.ISIS.String(), "NetworkDesignProtocolsISIS", "NetworkDesignProtocolsISIS", 1) + `,`,
		`IBGP:` + strings.Replace(this.IBGP.String(), "NetworkDesignProtocolsIBGP", "NetworkDesignProtocolsIBGP", 1) + `,`,
		`EBGP:` + strings.Replace(this.EBGP.String(), "NetworkDesignProtocolsEBGP", "NetworkDesignProtocolsEBGP", 1) + `,`,
		`BGPEVPN:` + strings.Replace(this.BGPEVPN.String(), "NetworkDesignProtocolsBGPEVPN", "NetworkDesignProtocolsBGPEVPN", 1) + `,`,
		`BGPVPNv4:` + strings.Replace(this.BGPVPNv4.String(), "NetworkDesignProtocolsBGPVPNv4", "NetworkDesignProtocolsBGPVPNv4", 1) + `,`,
		`BGPVPNv6:` + strings.Replace(this.BGPVPNv6.String(), "NetworkDesignProtocolsBGPVPNv6", "NetworkDesignProtocolsBGPVPNv6", 1) + `,`,
		`BGPRouteTarget:` + strings.Replace(this.BGPRouteTarget.String(), "NetworkDesignProtocolsBGPRouteTarget", "NetworkDesignProtocolsBGPRouteTarget", 1) + `,`,
		`BGPLabeledUnicastv4:` + strings.Replace(this.BGPLabeledUnicastv4.String(), "NetworkDesignProtocolsBGPLabeledUnicastv4", "NetworkDesignProtocolsBGPLabeledUnicastv4", 1) + `,`,
		`BGPLabeledUnicastv6:` + strings.Replace(this.BGPLabeledUnicastv6.String(), "NetworkDesignProtocolsBGPLabeledUnicastv6", "NetworkDesignProtocolsBGPLabeledUnicastv6", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsBGPEVPN) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsBGPEVPN{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsBGPLabeledUnicastv4) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsBGPLabeledUnicastv4{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsBGPLabeledUnicastv6) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsBGPLabeledUnicastv6{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsBGPRouteTarget) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsBGPRouteTarget{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsBGPVPNv4) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsBGPVPNv4{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsBGPVPNv6) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsBGPVPNv6{`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsEBGP) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsEBGP{`,
		`ASPool:` + valueToStringGenerated(this.ASPool) + `,`,
		`BFD:` + fmt.Sprintf("%v", this.BFD) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsIBGP) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsIBGP{`,
		`AS:` + valueToStringGenerated(this.AS) + `,`,
		`LocalAS:` + fmt.Sprintf("%v", this.LocalAS) + `,`,
		`RouteReflectors:` + fmt.Sprintf("%v", this.RouteReflectors) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsISIS) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsISIS{`,
		`Instance:` + valueToStringGenerated(this.Instance) + `,`,
		`Level:` + fmt.Sprintf("%v", this.Level) + `,`,
		`Areas:` + fmt.Sprintf("%v", this.Areas) + `,`,
		`MaxECMPPaths:` + valueToStringGenerated(this.MaxECMPPaths) + `,`,
		`BFD:` + fmt.Sprintf("%v", this.BFD) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignProtocolsOSPF) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignProtocolsOSPF{`,
		`Instance:` + valueToStringGenerated(this.Instance) + `,`,
		`Version:` + fmt.Sprintf("%v", this.Version) + `,`,
		`Area:` + fmt.Sprintf("%v", this.Area) + `,`,
		`MaxECMPPaths:` + valueToStringGenerated(this.MaxECMPPaths) + `,`,
		`BFD:` + fmt.Sprintf("%v", this.BFD) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignSpec{`,
		`Interfaces:` + strings.Replace(this.Interfaces.String(), "NetworkDesignInterfaces", "NetworkDesignInterfaces", 1) + `,`,
		`Protocols:` + strings.Replace(this.Protocols.String(), "NetworkDesignProtocols", "NetworkDesignProtocols", 1) + `,`,
		`Encapsultation:` + strings.Replace(this.Encapsultation.String(), "NetworkDesignEncapsulation", "NetworkDesignEncapsulation", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *NetworkDesignStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&NetworkDesignStatus{`,
		`ConditionedStatus:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ConditionedStatus), "ConditionedStatus", "v1alpha11.ConditionedStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OSPFLinkParameters) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OSPFLinkParameters{`,
		`IGPLinkParameters:` + strings.Replace(strings.Replace(this.IGPLinkParameters.String(), "IGPLinkParameters", "IGPLinkParameters", 1), `&`, ``, 1) + `,`,
		`Area:` + valueToStringGenerated(this.Area) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringGenerated(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *BFDLinkParameters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BFDLinkParameters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BFDLinkParameters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Enabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Enabled = &b
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinTx", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinTx = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinRx", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinRx = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinEchoRx", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MinEchoRx = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Multiplier", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Multiplier = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TTL", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TTL = &v
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BGPLinkParameters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BGPLinkParameters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BGPLinkParameters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BFD", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.BFD = &b
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IGPLinkParameters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IGPLinkParameters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IGPLinkParameters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := NetworkType(dAtA[iNdEx:postIndex])
			m.NetworkType = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Passive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Passive = &b
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BFD", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.BFD = &b
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metric", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Metric = &v
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ISISLinkParameters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ISISLinkParameters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ISISLinkParameters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IGPLinkParameters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.IGPLinkParameters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := ISISLevel(dAtA[iNdEx:postIndex])
			m.Level = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesign) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesign: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesign: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignEncapsulation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignEncapsulation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignEncapsulation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VXLAN", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VXLAN == nil {
				m.VXLAN = &NetworkDesignEncapsulationVXLAN{}
			}
			if err := m.VXLAN.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MPLS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MPLS == nil {
				m.MPLS = &NetworkDesignEncapsulationMPLS{}
			}
			if err := m.MPLS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SRV6", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SRV6 == nil {
				m.SRV6 = &NetworkDesignEncapsulationSRv6{}
			}
			if err := m.SRV6.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignEncapsulationMPLS) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLS: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLS: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LDP", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LDP == nil {
				m.LDP = &NetworkDesignEncapsulationMPLSLDP{}
			}
			if err := m.LDP.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SR", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SR == nil {
				m.SR = &NetworkDesignEncapsulationMPLSSR{}
			}
			if err := m.SR.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RSVP", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RSVP == nil {
				m.RSVP = &NetworkDesignEncapsulationMPLSRSVP{}
			}
			if err := m.RSVP.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignEncapsulationMPLSLDP) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLSLDP: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLSLDP: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignEncapsulationMPLSRSVP) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLSRSVP: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLSRSVP: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignEncapsulationMPLSSR) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLSSR: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLSSR: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignEncapsulationMPLSSRv6MicroSID) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLSSRv6MicroSID: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationMPLSSRv6MicroSID: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignEncapsulationSRv6) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationSRv6: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationSRv6: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MicroSID", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MicroSID == nil {
				m.MicroSID = &NetworkDesignEncapsulationMPLSSRv6MicroSID{}
			}
			if err := m.MicroSID.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignEncapsulationVXLAN) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationVXLAN: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignEncapsulationVXLAN: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignInterfaceParameters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignInterfaceParameters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignInterfaceParameters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prefixes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prefixes = append(m.Prefixes, v1alpha1.Prefix{})
			if err := m.Prefixes[len(m.Prefixes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addressing", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addressing = Addressing(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignInterfaces) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignInterfaces: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignInterfaces: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Loopback", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Loopback == nil {
				m.Loopback = &NetworkDesignInterfacesLoopback{}
			}
			if err := m.Loopback.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Underlay", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Underlay == nil {
				m.Underlay = &NetworkDesignInterfacesUnderlay{}
			}
			if err := m.Underlay.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignInterfacesLoopback) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignInterfacesLoopback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignInterfacesLoopback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkDesignInterfaceParameters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.NetworkDesignInterfaceParameters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignInterfacesUnderlay) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignInterfacesUnderlay: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignInterfacesUnderlay: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkDesignInterfaceParameters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.NetworkDesignInterfaceParameters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VLANTagging", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VLANTagging = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BFD", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BFD == nil {
				m.BFD = &BFDLinkParameters{}
			}
			if err := m.BFD.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, NetworkDesign{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocols) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocols: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocols: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OSPF", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OSPF == nil {
				m.OSPF = &NetworkDesignProtocolsOSPF{}
			}
			if err := m.OSPF.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ISIS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ISIS == nil {
				m.ISIS = &NetworkDesignProtocolsISIS{}
			}
			if err := m.ISIS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IBGP", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IBGP == nil {
				m.IBGP = &NetworkDesignProtocolsIBGP{}
			}
			if err := m.IBGP.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EBGP", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EBGP == nil {
				m.EBGP = &NetworkDesignProtocolsEBGP{}
			}
			if err := m.EBGP.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BGPEVPN", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BGPEVPN == nil {
				m.BGPEVPN = &NetworkDesignProtocolsBGPEVPN{}
			}
			if err := m.BGPEVPN.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BGPVPNv4", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BGPVPNv4 == nil {
				m.BGPVPNv4 = &NetworkDesignProtocolsBGPVPNv4{}
			}
			if err := m.BGPVPNv4.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BGPVPNv6", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BGPVPNv6 == nil {
				m.BGPVPNv6 = &NetworkDesignProtocolsBGPVPNv6{}
			}
			if err := m.BGPVPNv6.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BGPRouteTarget", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BGPRouteTarget == nil {
				m.BGPRouteTarget = &NetworkDesignProtocolsBGPRouteTarget{}
			}
			if err := m.BGPRouteTarget.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BGPLabeledUnicastv4", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BGPLabeledUnicastv4 == nil {
				m.BGPLabeledUnicastv4 = &NetworkDesignProtocolsBGPLabeledUnicastv4{}
			}
			if err := m.BGPLabeledUnicastv4.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BGPLabeledUnicastv6", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BGPLabeledUnicastv6 == nil {
				m.BGPLabeledUnicastv6 = &NetworkDesignProtocolsBGPLabeledUnicastv6{}
			}
			if err := m.BGPLabeledUnicastv6.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsBGPEVPN) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPEVPN: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPEVPN: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv4) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPLabeledUnicastv4: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPLabeledUnicastv4: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsBGPLabeledUnicastv6) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPLabeledUnicastv6: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPLabeledUnicastv6: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsBGPRouteTarget) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPRouteTarget: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPRouteTarget: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsBGPVPNv4) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPVPNv4: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPVPNv4: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsBGPVPNv6) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPVPNv6: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsBGPVPNv6: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsEBGP) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsEBGP: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsEBGP: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ASPool", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ASPool = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BFD", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BFD = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsIBGP) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsIBGP: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsIBGP: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AS", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AS = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalAS", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LocalAS = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RouteReflectors", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RouteReflectors = append(m.RouteReflectors, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsISIS) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsISIS: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsISIS: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Instance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Instance = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Level", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Level = ISISLevel(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Areas", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Areas = append(m.Areas, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxECMPPaths", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxECMPPaths = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BFD", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BFD = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignProtocolsOSPF) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignProtocolsOSPF: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignProtocolsOSPF: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Instance", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Instance = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Version = OSPFVersion(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Area", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Area = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxECMPPaths", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MaxECMPPaths = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BFD", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BFD = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Interfaces", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Interfaces == nil {
				m.Interfaces = &NetworkDesignInterfaces{}
			}
			if err := m.Interfaces.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Protocols", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Protocols == nil {
				m.Protocols = &NetworkDesignProtocols{}
			}
			if err := m.Protocols.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Encapsultation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Encapsultation == nil {
				m.Encapsultation = &NetworkDesignEncapsulation{}
			}
			if err := m.Encapsultation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NetworkDesignStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NetworkDesignStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NetworkDesignStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConditionedStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ConditionedStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OSPFLinkParameters) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OSPFLinkParameters: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OSPFLinkParameters: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IGPLinkParameters", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.IGPLinkParameters.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Area", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Area = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenerated(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenerated
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenerated
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenerated
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenerated        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenerated          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenerated = fmt.Errorf("proto: unexpected end of group")
)
