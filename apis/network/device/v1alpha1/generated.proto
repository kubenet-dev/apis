/*
Copyright 2024 Nokia.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.kubenet_dev.apis.apis.network.device.v1alpha1;

import "github.com/kform-dev/choreo/apis/condition/v1alpha1/generated.proto";
import "github.com/kubenet-dev/apis/apis/network/core/v1alpha1/generated.proto";
import "github.com/kuidio/kuid/apis/id/v1alpha1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/kubenet-dev/apis/apis/network/device/v1alpha1";

// BFD defines the Schema for the BFD API
message BFD {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional BFDSpec spec = 2;

  optional BFDStatus status = 3;
}

// BFDList contains a list of BFDs
// +k8s:deepcopy-gen:BFDs=k8s.io/apimachinery/pkg/runtime.Object
message BFDList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated BFD items = 2;
}

// BFDSpec defines the desired state of BFD
message BFDSpec {
  // PartitionProviderNodeID defines the kuid node ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderEndpointID partitionEndpointID = 1;

  // ID defines the id of the BFD
  optional uint32 id = 2;

  // Enabled defines if bfd is enabled or not
  optional bool enabled = 3;

  // BFD defines the BFD parameters
  optional .github.com.kubenet_dev.apis.apis.network.core.v1alpha1.BFDLinkParameters bfd = 4;
}

// BFDStatus defines the observed state of BFD
message BFDStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// BGP defines the Schema for the BGP API
message BGP {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional BGPSpec spec = 2;

  optional BGPStatus status = 3;
}

message BGPAddressFamily {
  // Name defines the name of the address family
  optional string name = 1;

  // RFC5549 defines if rfc5549 is enabled for this address family
  optional bool rfc5549 = 2;
}

// BGPDynamicNeighbor defines the Schema for the BGPDynamicNeighbor API
message BGPDynamicNeighbor {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional BGPDynamicNeighborSpec spec = 2;

  optional BGPDynamicNeighborStatus status = 3;
}

message BGPDynamicNeighborInterface {
  // PartitionEndpointID defines the kuid endpoint ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionEndpointID partitionEndpointID = 1;

  // ID defines the id of the NetworkInstance
  optional uint32 id = 2;

  // PeerAS defines the peer autonomous system of the bgp neighbor
  optional uint32 peerAS = 3;

  // PeerGroup defines the peer group of the bgp neighbor
  optional string peerGroup = 4;
}

// BGPDynamicNeighborList contains a list of BGPDynamicNeighbors
// +k8s:deepcopy-gen:BGPDynamicNeighbors=k8s.io/apimachinery/pkg/runtime.Object
message BGPDynamicNeighborList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated BGPDynamicNeighbor items = 2;
}

// BGPDynamicNeighborSpec defines the desired state of BGPDynamicNeighbor
message BGPDynamicNeighborSpec {
  // PartitionProviderNodeID defines the kuid node ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderNodeID partitionEndpointID = 1;

  // Prefixes define the prefix list
  // +listType=set
  repeated string localAS = 2;

  // Interfaces define the interfaces on which the dynamic BGP neighbor are associated
  // +listType=map
  // +listMapKey=partition
  // +listMapKey=region
  // +listMapKey=site
  // +listMapKey=node
  // +listMapKey=port
  // +listMapKey=endpoint
  // +listMapKey=id
  repeated BGPDynamicNeighborInterface interfaces = 3;
}

// BGPDynamicNeighborStatus defines the observed state of BGPDynamicNeighbor
message BGPDynamicNeighborStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// BGPList contains a list of BGPs
// +k8s:deepcopy-gen:BGPs=k8s.io/apimachinery/pkg/runtime.Object
message BGPList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated BGP items = 2;
}

// BGPNeighbor defines the Schema for the BGPNeighbor API
message BGPNeighbor {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional BGPNeighborSpec spec = 2;

  optional BGPNeighborStatus status = 3;
}

// BGPNeighborList contains a list of BGPNeighbors
// +k8s:deepcopy-gen:BGPNeighbors=k8s.io/apimachinery/pkg/runtime.Object
message BGPNeighborList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated BGPNeighbor items = 2;
}

// BGPNeighborSpec defines the desired state of BGPNeighbor
message BGPNeighborSpec {
  // PartitionProviderNodeID defines the kuid node ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderNodeID partitionEndpointID = 1;

  // LocalAS defines the local autonomous system of the bgp neighbor
  optional uint32 localAS = 2;

  // LocalAddress defines the local address of the bgp neighbor
  optional string localAddress = 3;

  // PeerAS defines the peer autonomous system of the bgp neighbor
  optional uint32 peerAS = 4;

  // PeerAddress defines the peer address of the bgp neighbor
  optional string peerAddress = 5;

  // PeerGroup defines the peer group of the bgp neighbor
  optional string peerGroup = 6;

  // BFD defines if BFD is enabled on the BGP peer group
  optional bool bfd = 7;
}

// BGPNeighborStatus defines the observed state of BGPNeighbor
message BGPNeighborStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

message BGPPeerGroup {
  // Name defines the name of the peer group family
  optional string name = 1;

  // Address families define the address families to be disabled
  repeated BGPAddressFamily addressFamilies = 2;

  // RouteReflector defines the RouteReflector parameters
  optional BGPRouteReflector routeReflector = 3;

  // BFD defines if BFD is enabled on the BGP peer group
  optional bool bfd = 4;
}

message BGPRouteReflector {
  // ClusterID defines the clusterID of the Router reflector
  optional string clusterID = 1;
}

// BGPSpec defines the desired state of BGP
message BGPSpec {
  // PartitionProviderNodeID defines the kuid node ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderNodeID partitionEndpointID = 1;

  // AS defines the autonomous system
  optional uint32 as = 2;

  // RouterID defines the router ID
  optional string routerID = 3;

  // +listType=map
  // +listMapKey=name
  // AddressFamilies defines the address families that need to be enabled globally
  repeated BGPAddressFamily addressFamilies = 4;

  // +listType=map
  // +listMapKey=name
  // PeerGroups define the peer groups for the BGP instance
  repeated BGPPeerGroup peerGroups = 5;
}

// BGPStatus defines the observed state of BGP
message BGPStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:resource:categories={kubenet}
// Interface defines the Schema for the Interface API
message Interface {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional InterfaceSpec spec = 2;

  optional InterfaceStatus status = 3;
}

// InterfaceList contains a list of Interfaces
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message InterfaceList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Interface items = 2;
}

// InterfaceSpec defines the desired state of Interface
message InterfaceSpec {
  // PartitionProviderEndpointID defines the kuid ep ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderEndpointID partitionEndpointID = 1;

  // Ethernet defines the ethernet properties of the interface
  optional InterfaceSpecEthernet ethernet = 2;

  // VLANTagging defines if the interface is configured for VLAN tagging
  optional bool vlanTagging = 3;

  // MTU defines the max transmission unit size in octets for the physical interface.  If this is not set, the mtu is
  // set to the operational default -- e.g., 1514 bytes on an Ethernet interface.";
  // +kubebuilder:default:=1514
  optional uint32 mtu = 4;
}

message InterfaceSpecEthernet {
  // Speed defines the interface speed of the interface
  optional string speed = 1;
}

// InterfaceStatus defines the observed state of Interface
message InterfaceStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// NetworkInstance defines the Schema for the NetworkInstance API
message NetworkInstance {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NetworkInstanceSpec spec = 2;

  optional NetworkInstanceStatus status = 3;
}

message NetworkInstanceInterface {
  // PartitionEndpointID defines the kuid endpoint id
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionEndpointID partitionEndpointID = 1;

  // ID defines the id of the subinterface
  optional uint32 id = 2;
}

// NetworkInstanceList contains a list of NetworkInstances
// +k8s:deepcopy-gen:NetworkInstances=k8s.io/apimachinery/pkg/runtime.Object
message NetworkInstanceList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated NetworkInstance items = 2;
}

// NetworkInstanceSpec defines the desired state of NetworkInstance
message NetworkInstanceSpec {
  // PartitionProviderNodeID defines the kuid node ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderNodeID partitionEndpointID = 1;

  // ID defines the id of the NetworkInstance
  optional uint32 id = 2;

  // Name defines the name of the NetworkInstance
  optional string name = 3;

  // Type defines the network instance type
  // +kubebuilder:validation:Enum=default;mac-vrf;ip-vrf;
  optional string type = 4;

  // Interfaces defines interfaces belonging to the network instance
  // +listType=map
  // +listMapKey=partition
  // +listMapKey=region
  // +listMapKey=site
  // +listMapKey=node
  // +listMapKey=port
  // +listMapKey=endpoint
  // +listMapKey=id
  repeated NetworkInstanceInterface interfaces = 5;

  // VXLANInterface define the vxlan interface belonging to the network instance
  optional NetworkInstanceVXLANInterface vxlanInterface = 6;
}

// NetworkInstanceStatus defines the observed state of NetworkInstance
message NetworkInstanceStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

message NetworkInstanceVXLANInterface {
  // PartitionEndpointID defines the kuid endpoint id
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionEndpointID partitionEndpointID = 1;

  // ID defines the id of the subinterface
  optional uint32 id = 2;
}

// NodeTemplate defines the Schema for the NodeTemplate API
message NodeTemplate {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional NodeTemplateSpec spec = 2;

  optional NodeTemplateStatus status = 3;
}

// NodeTemplateList contains a list of NodeTemplates
// +k8s:deepcopy-gen:NodeTemplates=k8s.io/apimachinery/pkg/runtime.Object
message NodeTemplateList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated NodeTemplate items = 2;
}

message NodeTemplatePort {
  optional NodeTemplatePortIds ids = 1;

  optional NodeTemplatePortAdaptor adaptor = 2;
}

message NodeTemplatePortAdaptor {
  optional string name = 1;

  optional string speed = 2;

  optional bool pluggable = 3;

  optional uint32 connectors = 4;
}

message NodeTemplatePortIds {
  optional uint32 start = 1;

  optional uint32 end = 2;
}

// NodeTemplateSpec defines the desired state of NodeTemplate
message NodeTemplateSpec {
  optional string provider = 1;

  optional string platformType = 2;

  repeated NodeTemplatePort ports = 3;
}

// NodeTemplateStatus defines the observed state of NodeTemplate
message NodeTemplateStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// PrefixSet defines the Schema for the PrefixSet API
message PrefixSet {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PrefixSetSpec spec = 2;

  optional PrefixSetStatus status = 3;
}

// PrefixSetList contains a list of PrefixSets
// +k8s:deepcopy-gen:PrefixSets=k8s.io/apimachinery/pkg/runtime.Object
message PrefixSetList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated PrefixSet items = 2;
}

message PrefixSetPrefix {
  // Prefix defines the Prefix in the PrefixSet
  optional string prefix = 1;

  // MaskLengthRange defines the mask lemgth ir range
  optional string maskLengthRange = 2;
}

// PrefixSetSpec defines the desired state of PrefixSet
message PrefixSetSpec {
  // PartitionProviderNodeID defines the kuid node ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderNodeID partitionEndpointID = 1;

  // Name defines the name of the prefix set
  optional string name = 2;

  // Statements defines the routing policy statements
  // +listType=map
  // +listMapKey=prefix
  repeated PrefixSetPrefix prefixes = 3;
}

// PrefixSetStatus defines the observed state of PrefixSet
message PrefixSetStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// RoutingPolicy defines the Schema for the RoutingPolicy API
message RoutingPolicy {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional RoutingPolicySpec spec = 2;

  optional RoutingPolicyStatus status = 3;
}

// RoutingPolicyList contains a list of RoutingPolicys
// +k8s:deepcopy-gen:RoutingPolicys=k8s.io/apimachinery/pkg/runtime.Object
message RoutingPolicyList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated RoutingPolicy items = 2;
}

// RoutingPolicySpec defines the desired state of RoutingPolicy
message RoutingPolicySpec {
  // PartitionProviderNodeID defines the kuid node ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderNodeID partitionEndpointID = 1;

  // Name defines the name of the routing policy
  optional string name = 2;

  // DefaultAction defines the default action of the route policy
  optional RoutingPolicyStatementAction defaultAction = 3;

  // Statements defines the routing policy statements
  // +listType=map
  // +listMapKey=id
  repeated RoutingPolicyStatement statements = 4;
}

message RoutingPolicyStatement {
  optional uint32 id = 1;

  optional RoutingPolicyStatementAction action = 2;

  optional RoutingPolicyStatementMatch match = 3;
}

message RoutingPolicyStatementAction {
  // BGP defines the default bgp policy action
  optional RoutingPolicyStatementActionBGP bgp = 1;

  // Result defines the result of the default routing policy action
  // +kubebuilder:validation:Enum=accept;reject;
  // +kubebuilder:default:=reject
  optional string result = 2;
}

message RoutingPolicyStatementActionBGP {
  // TagSetRef define the community tag reference
  optional string tagSetRef = 1;
}

message RoutingPolicyStatementMatch {
  // AddressFamily define the matching address family
  // +kubebuilder:validation:Enum=ipv4Unicast;ipv6Unicast;bgpEVPN;bgpVPNv4;bgpVPNv6;bgpRouteTarget;bgpLabeledUnicastv4;bgpLabeledUnicastv6;
  optional string addressFamily = 1;

  // BGP define the bgp match statements
  optional RoutingPolicyStatementMatchBGP bgp = 2;

  // OSPF define the ospf match statements
  optional RoutingPolicyStatementMatchOSPF ospf = 3;

  // ISIS define the isis match statements
  optional RoutingPolicyStatementMatchISIS isis = 4;

  // PrefixSetRef define the prefixSetRef match statements
  optional string prefixSetRef = 5;

  // Protocol define the protocol match statements
  // +kubebuilder:validation:Enum=aggregate;arpND;bgp;bgpLabel;bgpEVPN;dhcp;host;isis;local;ospfv2;ospfv3;static;
  optional string protocol = 6;

  // TagSetRef define the tagRefSet match statements
  optional string tagSetRef = 7;
}

message RoutingPolicyStatementMatchBGP {
  // ASPathLength match statement
  optional RoutingPolicyStatementMatchBGPASPathLength asPathLength = 1;

  // ASPathSetRef match statement
  optional string asPathSetRef = 2;

  // CommunitySetRef match statement
  optional string communitySetRef = 3;
}

message RoutingPolicyStatementMatchBGPASPathLength {
  // +kubebuilder:validation:Enum=eq;ge;le;
  optional string operator = 1;

  // Count a repeated sequence of the same AS number as just 1 element
  optional bool unique = 2;

  // The number of (unique) AS numbers in the AS path
  optional uint32 value = 3;
}

message RoutingPolicyStatementMatchISIS {
  // Level match statement
  // +kubebuilder:validation:Enum=L1;L2;L1L2;
  optional string level = 1;

  // RouteType (internal/external) match statement
  // An IS-IS IPv4 prefix is external if it is signalled in TLV 130 or TLV135 with RFC 7794 X flag=1.
  // An IS-IS IPv6 prefix is external if the TLV 236/TLV 237 external bit = 1.
  // +kubebuilder:validation:Enum=internal;external;
  optional string routeType = 2;
}

message RoutingPolicyStatementMatchOSPF {
  // AreaID match statement
  optional string areaID = 1;

  // InstanceID match statement
  optional uint32 instanceID = 2;

  // RouteType (internal/external) match statement
  // +kubebuilder:validation:Enum=internal;external;
  optional string routeType = 3;
}

// RoutingPolicyStatus defines the observed state of RoutingPolicy
message RoutingPolicyStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// SubInterface defines the Schema for the SubInterface API
message SubInterface {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SubInterfaceSpec spec = 2;

  optional SubInterfaceStatus status = 3;
}

message SubInterfaceIPv4 {
  // Addresses define the addresses within the subinterface address family
  repeated string addresses = 1;
}

message SubInterfaceIPv6 {
  // Addresses define the addresses within the subinterface address family
  repeated string addresses = 1;
}

// SubInterfaceList contains a list of SubInterfaces
// +k8s:deepcopy-gen:SubInterfaces=k8s.io/apimachinery/pkg/runtime.Object
message SubInterfaceList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated SubInterface items = 2;
}

message SubInterfacePeer {
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionEndpointID partitionEndpointID = 1;

  // ID defines the id of the subinterface
  optional uint32 id = 2;

  // IPv4 defines the ipv4 parameters for the subinterface
  optional SubInterfaceIPv4 ipv4 = 3;

  // IPv6 defines the ipv6 parameters for the subinterface
  optional SubInterfaceIPv6 ipv6 = 4;
}

// SubInterfaceSpec defines the desired state of SubInterface
message SubInterfaceSpec {
  // PartitionProviderEndpointID defines the kuid ep ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderEndpointID partitionEndpointID = 1;

  // ID defines the id of the subinterface
  optional uint32 id = 2;

  // Enabled defines if bfd is enabled or not
  optional bool enabled = 3;

  // Type defines the subinterface type
  // +kubebuilder:validation:Enum=routed;bridged;
  optional string type = 4;

  // IPv4 defines the ipv4 parameters for the subinterface
  optional SubInterfaceIPv4 ipv4 = 5;

  // IPv6 defines the ipv6 parameters for the subinterface
  optional SubInterfaceIPv6 ipv6 = 6;

  // BFD defines the BFD parameters for the subinterface
  optional .github.com.kubenet_dev.apis.apis.network.core.v1alpha1.BFDLinkParameters bfd = 7;

  // Peer defines the peer subinterface parameters of the subinterface
  optional SubInterfacePeer peer = 8;
}

// SubInterfaceStatus defines the observed state of SubInterface
message SubInterfaceStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// +genclient
// +k8s:deepcopy-gen:TunnelInterfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:resource:categories={kubenet}
// TunnelInterface defines the Schema for the TunnelInterface API
message TunnelInterface {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TunnelInterfaceSpec spec = 2;

  optional TunnelInterfaceStatus status = 3;
}

// TunnelInterfaceList contains a list of TunnelInterfaces
// +k8s:deepcopy-gen:TunnelInterfaces=k8s.io/apimachinery/pkg/runtime.Object
message TunnelInterfaceList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated TunnelInterface items = 2;
}

// TunnelTunnelInterfaceSpec defines the desired state of TunnelInterface
message TunnelInterfaceSpec {
  // PartitionProviderNodeID defines the kuid node ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderNodeID partitionNodeID = 1;
}

message TunnelInterfaceSpecEthernet {
  // Speed defines the TunnelInterface speed of the TunnelInterface
  optional string speed = 1;
}

// TunnelInterfaceStatus defines the observed state of TunnelInterface
message TunnelInterfaceStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

// +genclient
// +k8s:deepcopy-gen:TunnelSubInterfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:storageversion
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:resource:categories={kubenet}
// TunnelSubInterface defines the Schema for the TunnelSubInterface API
message TunnelSubInterface {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional TunnelSubInterfaceSpec spec = 2;

  optional TunnelSubInterfaceStatus status = 3;
}

// TunnelSubInterfaceList contains a list of TunnelSubInterfaces
// +k8s:deepcopy-gen:TunnelSubInterfaces=k8s.io/apimachinery/pkg/runtime.Object
message TunnelSubInterfaceList {
  optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated TunnelSubInterface items = 2;
}

// TunnelTunnelSubInterfaceSpec defines the desired state of TunnelSubInterface
message TunnelSubInterfaceSpec {
  // PartitionProviderEndpointID defines the kuid ep ID
  optional .github.com.kuidio.kuid.apis.id.v1alpha1.PartitionProviderEndpointID partitionEndpointID = 1;

  // ID defines the id of the tunnel subinterface
  optional uint32 id = 2;

  // Type defines the subinterface type
  // +kubebuilder:validation:Enum=routed;bridged;
  optional string type = 3;
}

// TunnelSubInterfaceStatus defines the observed state of TunnelSubInterface
message TunnelSubInterfaceStatus {
  // ConditionedStatus provides the status of the Readiness using conditions
  // if the condition is true the other attributes in the status are meaningful
  optional .github.com.kform_dev.choreo.apis.condition.v1alpha1.ConditionedStatus conditionedStatus = 1;
}

